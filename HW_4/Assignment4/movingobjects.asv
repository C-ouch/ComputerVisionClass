% We insert a mesh corresponding to the 3d model of the lego object into
% various locations in an image.

% We have two images. Each image will have a 3d model inserted using K_lego
% with three results.
% We also have three results with K_checker for each of the two images.

% In order to insert a mesh into the new images (which are found in
% ./Images/3d_modify, we must transform the 3d points of the mesh Xo to a
% new mesh called X_transformed using 3D rotations and translations that we
% choose.

% % The 3D rotations and translations that we want are as follows.
% 
% Rotx = [1 0 0; 0 cosd(45) -sind(45); 0 sind(45) cosd(45)];
% Translation = [0 20 0]';
% % In order to get X_transformed, we must first perform our rotations and
% % translations on Xo and then transform by R and t.
% 
% X_transformed = (((Xo * Translation) * Rotx) * R) + t;





% Define the rotation angle in degrees
theta_deg = 30;

% Convert the rotation angle to radians
theta_rad = deg2rad(theta_deg);

% Define the rotation matrix around the y-axis
obj_rot = [cos(theta_rad) 0 sin(theta_rad);
     0             1 0;
     -sin(theta_rad) 0 cos(theta_rad)];

% Define the translation vector
obj_tran = [2; 0; 0];

% Apply the rotation and translation
X_transformed = obj_rot * Xo + obj_tran;

% Display the original and transformed object coordinates
figure;
scatter3(Xo(1,:), Xo(2,:), Xo(3,:), 'b');
hold on;
scatter3(X_transformed(1,:), X_transformed(2,:), X_transformed(3,:), 'r');
axis equal;
grid on;
legend('Original object coordinates', 'Transformed object coordinates');
xlabel('x');
ylabel('y');
zlabel('z');

bkg_im = "gener"



